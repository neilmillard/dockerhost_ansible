---
- name: Ubuntu | Add the certbot Repository
  apt_repository:
    repo: ppa:certbot/certbot
  when: ansible_distribution|lower == 'ubuntu'

- name: Debian/Ubuntu | Install Certbot-nginx
  apt:
    update_cache: "yes"
    state: "latest"
    name:
      - "software-properties-common"
      - "certbot"
  when: "'pterodaemon' in group_names"

- name: Debian/Ubuntu | Install Certbot-nginx
  apt:
    update_cache: "yes"
    state: "latest"
    name:
      - "software-properties-common"
      - "python-certbot-nginx"
  when: "'pteropanel' in group_names"

- name: "Debian | Add {{ ansible_distribution_release }}-backports"
  template:
    src: templates/debian-backports.j2
    dest: "/etc/apt/sources.list.d/{{ ansible_distribution_release }}-backports.list"
  when: "ansible_distribution|lower == 'debian'"

- name: "Debian | Update {{ ansible_distribution_release }}-backports"
  apt:
    update_cache: yes
  when: "ansible_distribution|lower == 'debian'"

- name: "Debian | Install Certbot from {{ ansible_distribution_release }}-backports"
  apt:
    update_cache: "yes"
    state: "latest"
    default_release: "{{ ansible_distribution_release }}-backports"
    name:
      - "certbot"
  when: "ansible_distribution|lower == 'debian'"

- name: Debian/Ubuntu | Get service List
  service_facts:

- name: Debian/Ubuntu | Check for Nginx
  set_fact:
    is_nginx: true
  when: services["nginx"] is defined

- name: Debian/Ubuntu | Check for Apache
  set_fact:
    is_apache: true
  when: services["apache2"] is defined

- name: Debian/Ubuntu | Stop Nginx
  service: name=nginx state=stopped
  when: is_nginx is defined

- name: Debian/Ubuntu | Stop Apache
  service: name=apache2 state=stopped
  when: is_apache is defined

- name: Debian/Ubuntu | Generate Certbot Certificate STAGING
  command: certbot certonly --standalone -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }} --staging
  args:
    creates: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
  when: staging

- name: Debian/Ubuntu | Generate Certbot Certificate PRODUCTION
  command: certbot certonly --standalone -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }}
  args:
    creates: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
  when: staging is defined and staging is match("false")

- name: Debian/Ubuntu | Start Nginx
  service: name=nginx state=started
  when: is_nginx is defined

- name: Debian/Ubuntu | Start Apache
  service: name=apache2 state=started
  when: is_apache is defined
...